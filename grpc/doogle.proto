// doogle's peer interface definition
syntax = "proto3";

package doogle;

message Empty {}

message StringMessage {
    string message = 1;
}

message NodeInfo {
    bytes doogleAddress =1;
    string networkAddress = 2;
}

message NodeInfos {
    repeated NodeInfo infos = 1;
}

message NodeCertificate {
    bytes doogleAddress = 1;
    bytes publicKey = 2;
    bytes nonce = 3;
    int32 difficulty = 4;
}

service Doogle {
    // Store give index
    rpc StoreItem(StoreItemRequest) returns (Empty);

    // find index of given key
    rpc FindIndex(FindIndexRequest) returns(FindIndexReply);

    // return k closed nodes to given address
    rpc FindNode(FindNodeRequest) returns(FindNodeReply);

    // health check
    rpc PingWithCertificate (NodeCertificate) returns (StringMessage);

    // the following endpoints can be accessed from outside of the network.
    rpc Ping (StringMessage) returns(StringMessage);
    rpc PingTo(NodeInfo) returns (StringMessage); // request to send PingRequest to given node
    rpc GetIndex(StringMessage) returns(GetIndexReply); // get index of given query
    rpc PostUrl(StringMessage) returns (Empty); // post url in order for it to be indexed
}

message StoreItemRequest {
    NodeCertificate certificate = 1;
    string url = 2;
    string title = 3;
    string description = 4;
    repeated bytes edges = 5;
    bytes index = 6;
}

message Item {
    string url = 1;
    double localRank = 2;
}

message Items {
    repeated Item items = 1;
}

message FindIndexRequest {
    NodeCertificate certificate = 1;
    bytes doogleAddress = 2;
}

message FindIndexReply {
    NodeCertificate certificate = 1;
    oneof result {
        NodeInfos nodeInfos = 2;
        Items items = 3;
    }
}

message FindNodeRequest {
    NodeCertificate certificate = 1;
    bytes doogleAddress = 2;
}

message FindNodeReply {
    NodeCertificate certificate = 1;
    NodeInfos nodeInfos = 2;
}

message GetIndexReply {
    // TODO: add paging options
    repeated string urls = 1;
}
